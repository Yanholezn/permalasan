<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WannN Go Go/Home</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        body {
            min-height: 100vh;
            background: rgba(43, 37, 74, 1);
            color: #f2f2f2;
            padding: 20px;
            display: flex;
        }
        
        .container {
            max-width: 75%;
            margin-left: 70px;
            flex: 1;
        }
        
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
            border-bottom: 1px solid #30475e;
            margin-bottom: 30px;
        }
        
        h2 {
            color: #f2f2f2;
            font-weight: 600;
        }
        
        .logout-btn {
            background: transparent;
            color: #7b68ee;
            border: 1px solid #7b68ee;
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            font-size: 14px;
        }
        
        .logout-btn:hover {
            background: #7b68ee;
            color: white;
        }

        .search-bar {
            display: flex;
            gap: 10px;
            align-items: center;
            margin-bottom: 30px;
        }

        .search-bar input {
            padding: 12px 15px;
            border: none;
            background: #222831;
            border-radius: 5px;
            color: #f2f2f2;
            outline: none;
            flex: 1;
        }

        .search-bar button {
            padding: 12px 20px;
            background: #7b68ee;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .search-bar button:hover {
            background: #6a5acd;
        }
        
        .add-board {
            display: flex;
            gap: 10px;
            align-items: center;
        }
        
        .add-board button {
            padding: 12px 20px;
            background: #7b68ee;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
            align-items: center;
            gap: 8px;
        }
        
        .add-board button:hover {
            background: #6a5acd;
        }
        
        #inputContainer {
            display: flex;
            gap: 10px;
            flex: 1;
            align-items: center;
        }
        
        #inputContainer input {
            padding: 12px 15px;
            border: none;
            background: #222831;
            border-radius: 5px;
            color: #f2f2f2;
            outline: none;
        }
        
        #inputContainer button {
            padding: 12px 20px;
            background: #7b68ee;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        #inputContainer button:hover {
            background: #6a5acd;
        }
        
        .boards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 85px;
        }
        
        .board {
            background: #222831;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s, box-shadow 0.3s;
            display: flex;
            flex-direction: column;
            position: relative;
        }
        
        .board:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.3);
        }
        
        .board-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .board-text {
            font-size: 16px;
            line-height: 1.4;
            flex: 1;
        }
        
        .board-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #30475e;
        }
        
        .board-date {
            color: #888;
            font-size: 14px;
        }
        
        .board-delete {
            color: #ff6b6b;
            background: transparent;
            border: none;
            cursor: pointer;
            font-size: 18px;
            opacity: 0.7;
            transition: opacity 0.3s;
            padding: 5px 10px;
        }
        
        .board-delete:hover {
            opacity: 1;
        }
        
        .empty-boards {
            padding: 30px;
            text-align: center;
            color: #888;
            font-style: italic;
            grid-column: 1 / -1;
        }
        
        .greeting {
            color: #7b68ee;
            font-weight: normal;
            margin-bottom: 8px;
        }
        
        .filter-btn {
            padding: 8px 16px;
            background: transparent;
            border: none;
            color: #888;
            cursor: pointer;
            border-radius: 30px;
            transition: all 0.3s;
        }
        
        .filter-btn.active {
            background: #7b68ee;
            color: white;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 250px;
            background: #222831;
            padding: 20px;
            margin-right: 20px;
            border-radius: 10px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
        }

        .sidebar h3 {
            color: #7b68ee;
            padding: 5%;
            padding-bottom: 45px;
            font-size: 1.5em;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin-bottom: 15px;
        }

        .sidebar ul li a {
            color: #f2f2f2;
            text-decoration: none;
            font-size: 1.1em;
            transition: all 0.3s ease;
            display: flex;
            padding: 12px 15px;
            border-radius: 5px;
            align-items: center;
        }

        .sidebar ul li a:hover {
            color: #7b68ee;
            background: rgba(255, 255, 255, 0.1);
            padding-left: 15px;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .sidebar ul li a.active {
            color: #7b68ee;
            background: rgba(123, 104, 238, 0.1);
            border-left: 4px solid #7b68ee;
        }

        .sidebar ul li a i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        .board-options {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            font-size: 20px;
            color: #888;
            transition: color 0.3s;
        }

        .board-options:hover {
            color: #7b68ee;
        }

        .delete-board {
            display: none;
            position: absolute;
            top: 30px;
            right: 10px;
            background: #222831;
            border: 1px solid #30475e;
            border-radius: 5px;
            padding: 5px 10px;
            cursor: pointer;
            color: #ff6b6b;
            font-size: 14px;
        }

        .delete-board:hover {
            background: #30475e;
        }
    </style>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <div class="sidebar">
        <h3>Menu</h3>
        <ul>
            <li><a href="/home" class="active"><i class="fas fa-home"></i>Home</a></li>
            <li><a href="/archive"><i class="fas fa-archive"></i>Archive</a></li>
        </ul>
    </div>

    <div class="container">
        <header>
            <div>
                <h3 class="greeting">Welcome, <%= username %>!</h3>
                <h2>Todo Maker</h2>
            </div>
            <a href="/" class="logout-btn">Logout</a>
        </header>
        <div class="search-bar">
            <input type="text" placeholder="Search...">
            <button id="searchButton">Search</button>
        </div>
        <div class="add-board">
            <button id="showInputBtn">
                <span>+</span> Add
            </button>
            <div id="inputContainer" style="display: none;">
                <input type="text" placeholder="Add a new Board...">
                <button id="addBoardBtn">Add Board</button>
            </div>
        </div>
        
        <div class="boards" id="boardContainer">
        </div>
    </div>
</body>
<script>
    document.addEventListener("DOMContentLoaded", function () {
    const boardContainer = document.getElementById("boardContainer");
    const showInputBtn = document.getElementById("showInputBtn");
    const inputContainer = document.getElementById("inputContainer");
    const inputBoard = inputContainer.querySelector("input");
    const addBoardBtn = document.getElementById("addBoardBtn");

    // Fetch all projects when page loads
    fetchProjects();

    showInputBtn.addEventListener("click", function () {
        if (inputContainer.style.display === "flex") {
            inputContainer.style.display = "none"; // Sembunyikan inputContainer jika sudah ditampilkan
        } else {
            inputContainer.style.display = "flex"; // Tampilkan inputContainer jika disembunyikan
        }
    });

    addBoardBtn.addEventListener("click", function () {
        const boardText = inputBoard.value.trim();
        if (boardText === "") return;

        // Call API to create a new project
        fetch('/projects', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name: boardText })
        })
        .then(response => response.json())
        .then(data => {
            if (data.id) {
                // Create board element with the returned data
                createBoardElement(data);
                inputBoard.value = "";
                inputContainer.style.display = "none"; // Sembunyikan inputContainer setelah board ditambahkan
            } else {
                alert('Failed to create project: ' + (data.error || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('Error creating project:', error);
            alert('Failed to create project. Please try again.');
        });
    });

    // Function to fetch all projects
    function fetchProjects() {
        fetch('/projects')
            .then(response => response.json())
            .then(result => {
                if (result.data && Array.isArray(result.data)) {
                    // Clear existing boards
                    boardContainer.innerHTML = '';
                    
                    // Create board elements for each project
                    result.data.forEach(project => {
                        createBoardElement(project);
                    });
                } else {
                    console.error('Invalid response format:', result);
                }
            })
            .catch(error => {
                console.error('Error fetching projects:', error);
            });
    }

    // Function to create a board element
    function createBoardElement(project) {
        const boardDiv = document.createElement("div");
        boardDiv.classList.add("board");
        boardDiv.dataset.projectId = project.id;
        
        // Format date
        const createdDate = new Date(project.created_at);
        const dateFormatted = createdDate.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric'
        });

        boardDiv.innerHTML = `
            <div class="board-header">
                <span class="board-text">${project.name}</span>
            </div>
            <div class="board-footer">
                <span class="board-date">${dateFormatted}</span>
            </div>
            <div class="board-options">⋮</div>
            <div class="board-menu">
                <div class="delete-board">Delete</div>
                <div class="edit-board">Edit</div>
            </div>
        `;
        
        boardDiv.addEventListener("click", function (e) {
            if (!e.target.closest('.board-options') && 
                !e.target.closest('.delete-board') && 
                !e.target.closest('.edit-board')) {
                window.location.href = `/project?title=${encodeURIComponent(project.name)}&id=${project.id}`;
            }
        });

        const boardOptions = boardDiv.querySelector(".board-options");
        const boardMenu = boardDiv.querySelector(".board-menu");
        const deleteBoard = boardDiv.querySelector(".delete-board");
        const editBoard = boardDiv.querySelector(".edit-board");

        boardOptions.addEventListener("click", function (e) {
            e.stopPropagation(); // Mencegah event click dari board
            boardMenu.style.display = boardMenu.style.display === "block" ? "none" : "block";
        });

        deleteBoard.addEventListener("click", function (e) {
            e.stopPropagation(); // Mencegah event click dari board
            
            if (confirm('Are you sure you want to delete this project?')) {
                // Call API to delete the project
                fetch(`/project/${project.id}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        boardContainer.removeChild(boardDiv);
                    } else {
                        alert('Failed to delete: ' + (data.error || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error deleting project:', error);
                    alert('Failed to delete project. Please try again.');
                });
            }
        });

        deleteBoard.addEventListener("click", function (e) {
    e.stopPropagation(); // Mencegah event click dari board
    
    if (confirm('Are you sure you want to delete this project?')) {
        // Call API to delete the project
        fetch(`/projects/${project.id}`, {  // Changed from /project/:id to /projects/:id
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                boardContainer.removeChild(boardDiv);
            } else {
                alert('Failed to delete: ' + (data.error || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('Error deleting project:', error);
            alert('Failed to delete project. Please try again.');
        });
    }
});

        editBoard.addEventListener("click", function (e) {
            e.stopPropagation(); // Mencegah event click dari board
            
            const newName = prompt('Enter new project name:', project.name);
            if (newName && newName.trim() !== '') {
                // Call API to update the project
                fetch(`/projects/${project.id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ name: newName })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        boardDiv.querySelector('.board-text').textContent = newName;
                        boardMenu.style.display = 'none';
                    } else {
                        alert('Failed to update: ' + (data.error || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error updating project:', error);
                    alert('Failed to update project. Please try again.');
                });
            }
        });

        boardContainer.appendChild(boardDiv);
    }
});
</script>
</html>